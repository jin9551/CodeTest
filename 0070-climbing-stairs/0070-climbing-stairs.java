class Solution {
    public int climbStairs(int n) {
        if (n == 0 || n == 1) {
            return 1;
        }

        int[] dp = new int[n+1];
        dp[0] = dp[1] = 1;
        
        for (int i = 2; i <= n; i++) {
            // 피보나치 수열은 1,1,2,3,5 ... 올라간다.
            // n이 0일때 1 - 아무것도 안한다.
            // n이 1일때 1 - 1칸 올라간다.
            // n이 2일때 2 - 1칸씩 두번 올라간다 or 2칸을 한번에 올라간다.
            // n이 3일때 3 - 1칸씩 3, 2칸 1번 1칸 X 2 총 3가지 방식
            // 위와 같이 반복되는 패턴이 피보나치 수열과 같다.
            // 하여 n이 0과 1일때는 1 
            // n이 2이상일때는 기본으로 2를 더하여 n까지 닿을때까지 반복한다.
            // f(n)= f(n-1) + f(n-2) -> 피보나치 수열 점화식
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    }


}